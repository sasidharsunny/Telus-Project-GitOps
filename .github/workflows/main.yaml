name: Ci-CD using GitOps
on:
  workflow_dispatch: 
    inputs: 
      env: 
        type: choice 
        description: Make a choice
        options: 
          - dev 
          - master
          - stage 
          - prod
env:
  aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
  aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
  aws-region: ap-south-1


jobs:
  CI-CD-using-GitOps:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    
    - name: Build with Maven
      run: mvn clean install
      working-directory: /home/runner/work/Telus-Project-GitOps/Telus-Project-GitOps

    - name: JUnit Tests
      run: mvn test
      working-directory: /home/runner/work/Telus-Project-GitOps/Telus-Project-GitOps


    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Analyze using Sonar Cloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sasidharsunny_Telus-App-GitOps
          
    - name: List generated WAR files
      run: ls -l /home/runner/.m2/repository/org/kth/github-action-maven-tutorial/1.0-SNAPSHOT/github-action-maven-tutorial-1.0-SNAPSHOT.jar
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v1
      with:
        jfrog-cli-version: 'latest'
        artifactory-url: 'http://18.204.209.62:8081/'
      env:
        JFROG_CLI_HOME: /usr/local/bin

    - name: Build and Publish
      run: |
        # Build your application or package
        # Configure JFrog CLI with your Artifactory details using the new syntax
        jfrog config add MyArtifactory --artifactory-url=http://18.204.209.62:8081/ --access-token=$JFROG_API_KEY
        # Publish the artifact to JFrog Artifactory
        jfrog rt u "/home/runner/.m2/repository/org/kth/github-action-maven-tutorial/1.0-SNAPSHOT/github-action-maven-tutorial-1.0-SNAPSHOT.jar" "MyArtifactory/maven-artifact/my-app/*.jar"
      env:
        JFROG_API_KEY: ${{ secrets.JFROG_API_KEY }}


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mean-demo
        IMAGE_TAG: latest
      run: |
        docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest -f argocd-cicd-setup/Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    
    - name: Deployment To ArgoCD
      uses: actions/checkout@v3
      with:
          repository: sasidharsunny/Telus-app
          ref: 'main'
          token: ${{ secrets.G_TOKEN }}

    - name: Update Replicas
      run: |
        # Modify the deployment.yaml file to set the desired number of replicas
        sed -i 's/replicas: [0-9]*/replicas: 4/' Deployment/Deployment.yaml

        # Commit the changes
        git config --global user.email "sasidharsunny94@gmail.com"
        git config --global user.name "sasidharsunny"
        git add .
        git commit -m "Update replicas to 4"
        git push origin main  # Update the branch name as needed




















      
  
